<project default="create-log-default" >


	<!-- these properties will be overwritten -->

	<property name="src-dir" refid="fsot-src" />
	<property name="test-dir" value="tests" />

	<property name="lib" value="lib" />

	<!-- Override the following properties if neccessary -->

	<!-- fsot naming convention-->
	<property name="fsot-base" value="fsot-base" />
	<property name="instrumentedSourceDir" value="${fsot-base}/instrumented" />
	<property name="compiledInstrumentedDir" value="${fsot-base}/compiled-instrumented" />
	<property name="xmlcontainer" value="${fsot-base}/container.xml" />
	<property name="reporthtml" value="${fsot-base}/report.html" />

	<property name="junit3Runner" value="org.codecover.junit3.text.TestRunner" />
	<property name="junit4Runner" value="org.codecover.junit4.core.TestRunner" />
	<property name="junitRunnerToUse" value="" />

	<property name="mainClassName" value="" />

	
	<!-- taskdefs -->
	<taskdef name="codecover" classname="org.codecover.ant.CodecoverTask" classpath="${codecoverDir}/lib/codecover-ant.jar" />
	<taskdef name="fsot" classname="org.fsot.report.anttask.FsotTask" />


	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- clean  -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


	<target name="clean">
		<delete dir="${fsot-base}" quiet="true" />
	</target>


	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Instrument sources for code coverage -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


	<target name="instrument-sources" depends="clean">
		<codecover>
			<instrument containerId="c" language="java" destination="${instrumentedSourceDir}" charset="utf-8" copyUninstrumented="false">
				<source dir="${src-dir}">
					<include name="**/*.java" />
				</source>				
			</instrument>
			<save containerId="c" filename="${xmlcontainer}" />
		</codecover>
	</target>


	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Compile source with instrumentation -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


	<target name="compile-instrumented" depends="instrument-sources">
		<mkdir dir="${compiledInstrumentedDir}" />
		<javac srcdir="${instrumentedSourceDir}" destdir="${compiledInstrumentedDir}" encoding="utf-8" target="1.5" debug="true" classpathref="classpathCompile" includeAntRuntime="false" fork="true">
		</javac>
	</target>


	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Run source with instrumentation and create log-->
	<!-- TODO: change to using Junit to run instead of calling Junit directly -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


	<target name="run-instrumented">
		<path id="cp">
			
			<pathelement location="${codecoverDir}/lib/JUnit-TestRunner.jar" />
			<pathelement location="${codecoverDir}/lib/codecover-ant.jar" />
			<pathelement location="${codecoverDir}/lib/codecover-batch.jar" />
			<pathelement location="${codecoverDir}/lib/codecover-core.jar" />
			<pathelement location="${codecoverDir}/lib/codecover-instrumentation-java.jar" />
			<pathelement path="${compiledInstrumentedDir}" />
			<path refid="classpathTest"/>

		</path>
		
		<java fork="true" classname="${junitRunnerToUse}">
			<!--  JUNIT 3 org.codecover.junit3.text.TestRunner -->
			<!-- JUNIT 4 org.codecover.junit4.core.TestRunner -->
			<classpath refid="cp"/>
			<jvmarg value="-Dorg.codecover.coverage-log-file=${fsot-base}/${mainClassName}.clf" />
			<arg value="-methodsAsTestCases" />
			<arg value="${mainClassName}" />
		</java>
		
		 <available file="${fsot-base}/${mainClassName}.clf" property="${mainClassName}"/>
	</target>





	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Update Container -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<!-- Default Point of Entry -->
	<target name="create-log-default" depends="compile-instrumented,create-log"/>

	<!-- Subsequent Point of Entry -->
	<target name="create-log" depends="run-instrumented" if="${mainClassName}">
		
		<codecover>
			<load containerId="c" filename="${xmlcontainer}" />
			<analyze containerId="c" coverageLog="${fsot-base}/${mainClassName}.clf" name="${mainClassName}-Session" />
			<save containerId="c" filename="${xmlcontainer}" />
		</codecover>
	</target>

	<!-- Merge sessions into a single session -->
	<target name="merge-sessions">
		<codecover>
			<load containerId="c" filename="${xmlcontainer}" />
			<mergeSessions containerId="c" name="Test Session" removeOldSessions="true">
				<testSessions>
					<testSession pattern=".*" />
				</testSessions>
			</mergeSessions>
			<save containerId="c" filename="${xmlcontainer}" />
		</codecover>
	</target>


	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Create Coverage Report -->
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


	<target name="generate-html-report">
		<codecover>
			<load containerId="c" filename="${xmlcontainer}" />

			<report containerId="c" destination="${reporthtml}" template="${codecoverDir}/report-templates/HTML_Report_hierarchic.xml">
				<testCases>
					<testSession pattern=".*">
						<testCase pattern=".*" />
					</testSession>
				</testCases>
			</report>
		</codecover>
	</target>

	<target name="generate-csv-report">
		<fsot>
			<CSVReport filename="${xmlcontainer}" destination="${fsot-base}/output.csv" />
		</fsot>
	</target>

</project>
